{"version":3,"file":"static/js/390.4e778f9b.chunk.js","mappings":"qNACA,EAAuB,0BAAvB,EAAyD,2BAAzD,EAA4F,2BAA5F,EAAiI,6B,8BCKlH,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvBC,GAAWC,EAAAA,EAAAA,MAEjB,GAA0CC,EAAAA,EAAAA,IAAQ,CAChDC,cAAe,CACbC,KAAM,GACNC,OAAQ,MAHJC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAAcC,EAAhC,EAAgCA,MAwBhC,OACE,kBAAMC,UAAWC,EAAUC,SAAUJ,GAlBtB,SAAC,GAAsB,IAApBH,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OAEtBR,EAASe,MACP,SAAAC,GAAO,OAAIA,EAAQT,KAAKU,gBAAkBV,EAAKU,aAAxC,IAGTC,MAAM,GAAD,OAAIX,EAAJ,6BAGHP,EAASe,MAAK,SAAAC,GAAO,OAAIA,EAAQR,SAAWA,CAAvB,IACvBU,MAAM,GAAD,OAAIV,EAAJ,8BAGPL,GAASgB,EAAAA,EAAAA,IAAW,CAAEZ,KAAAA,EAAMC,OAAAA,KAC5BG,IACD,IAGC,WACE,mBAAOC,UAAWC,EAAlB,UAA6B,QAE3B,0BACED,UAAWC,EACXO,KAAK,OACLb,KAAK,OACLc,QAAQ,yHACRC,MAAM,0IACFb,EAAS,cAGjB,mBAAOG,UAAWC,EAAlB,UAA6B,UAE3B,0BACED,UAAWC,EACXO,KAAK,MACLb,KAAK,SACLc,QAAQ,yFACRC,MAAM,gGACFb,EAAS,gBAGjB,mBAAQG,UAAWC,EAAaO,KAAK,SAArC,SAA8C,kBAKnD,CC9DD,MAA4B,6BCA5B,EAAwB,sBAAxB,EAAsD,sB,UCqBtD,EAlBe,WACb,IAAMjB,GAAWC,EAAAA,EAAAA,MAIjB,OACE,mBAAOQ,UAAWC,EAAlB,UAA6B,yBAE3B,kBACED,UAAWC,EACXO,KAAK,OACLb,KAAK,SACLgB,SATiB,SAAAC,GAAG,OAAIrB,GAASsB,EAAAA,EAAAA,GAAUD,EAAIE,cAAcC,OAAzC,MAa3B,E,UCnBD,EAA+B,kCAA/B,EAAgF,kCAAhF,EAAgI,iCC2BhI,EAtBoB,WAClB,IAAMC,GAAkB3B,EAAAA,EAAAA,IAAY4B,EAAAA,IAC9B1B,GAAWC,EAAAA,EAAAA,MAEjB,OACE,eAAIQ,UAAWC,EAAf,SACGe,EAAgBE,KAAI,SAAAd,GAAO,OAC1B,gBAAIJ,UAAWC,EAAf,WACE,4BAAOG,EAAQT,KAAK,OAAQ,KAAC,0BAAOS,EAAQR,UAC5C,mBACEI,UAAWC,EACXO,KAAK,SACLW,QAAS,kBAAM5B,GAAS6B,EAAAA,EAAAA,IAAchB,EAAQiB,IAArC,EAHX,SAIC,aANmCjB,EAAQiB,GADpB,KAcjC,E,UCMD,EAtBkB,WAChB,IAAM9B,GAAWC,EAAAA,EAAAA,MACX8B,GAAYjC,EAAAA,EAAAA,IAAYkC,EAAAA,IACxBC,GAAQnC,EAAAA,EAAAA,IAAYoC,EAAAA,IAM1B,OAJAC,EAAAA,EAAAA,YAAU,WACRnC,GAASoC,EAAAA,EAAAA,MACV,GAAE,CAACpC,KAGF,iBAAKS,UAAWC,EAAhB,WACE,wBAAI,eACJ,SAACd,EAAD,KACA,wBAAI,cACJ,SAAC,EAAD,IACCqC,IAAS,uBAAIA,KACd,SAAC,EAAD,IACCF,IAAa,SAACM,EAAA,EAAD,MAGnB,ECxBD,EAJiB,WACf,OAAO,SAAC,EAAD,GACR,C","sources":["webpack://react-homework-template/./src/components/contactForm/ContactForm.module.css?fd94","components/contactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/phonebook/Phonebook.module.css?ee46","webpack://react-homework-template/./src/components/filter/Filter.module.css?e85f","components/filter/Filter.jsx","webpack://react-homework-template/./src/components/contactList/ContactList.module.css?7e3b","components/contactList/ContactList.jsx","components/phonebook/Phonebook.jsx","pages/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__ttXmo\",\"label\":\"ContactForm_label__VF051\",\"input\":\"ContactForm_input__e2U+9\",\"formBtn\":\"ContactForm_formBtn__and1i\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport css from './ContactForm.module.css';\nimport { getContacts } from 'redux/selectors';\nimport { addContact } from 'redux/operations';\n\nexport default function ContactForm() {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const { register, handleSubmit, reset } = useForm({\n    defaultValues: {\n      name: '',\n      number: '',\n    },\n  });\n\n  const onSubmit = ({ name, number }) => {\n    if (\n      contacts.some(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n    if (contacts.some(contact => contact.number === number)) {\n      alert(`${number} is already in contacts.`);\n      return;\n    }\n    dispatch(addContact({ name, number }));\n    reset();\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit(onSubmit)}>\n      <label className={css.label}>\n        Name\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          {...register('name')}\n        />\n      </label>\n      <label className={css.label}>\n        Number\n        <input\n          className={css.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          {...register('number')}\n        />\n      </label>\n      <button className={css.formBtn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"phonebook\":\"Phonebook_phonebook__k1MxR\"};","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__IWv91\",\"input\":\"Filter_input__R4e-B\"};","import css from './Filter.module.css';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filterSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const onFilterChange = evt => dispatch(setFilter(evt.currentTarget.value));\n\n  return (\n    <label className={css.label}>\n      Find contacts by name\n      <input\n        className={css.input}\n        type=\"text\"\n        name=\"filter\"\n        onChange={onFilterChange}\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsList\":\"ContactList_contactsList__xdOBb\",\"contactsItem\":\"ContactList_contactsItem__PT5Mh\",\"contactsBtn\":\"ContactList_contactsBtn__Xmn9q\"};","import React from 'react';\nimport css from './ContactList.module.css';\nimport { getVisibleContacts } from 'redux/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/operations';\n\nconst ContactList = () => {\n  const visibleContacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  return (\n    <ul className={css.contactsList}>\n      {visibleContacts.map(contact => (\n        <li className={css.contactsItem} key={contact.id}>\n          <span>{contact.name}:</span> <span>{contact.number}</span>\n          <button\n            className={css.contactsBtn}\n            type=\"button\"\n            onClick={() => dispatch(deleteContact(contact.id))}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import ContactForm from 'components/contactForm/ContactForm';\nimport css from './Phonebook.module.css';\nimport Filter from 'components/filter/Filter';\nimport ContactList from 'components/contactList/ContactList';\nimport Loader from 'components/loader/Loader';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getError, getIsLoading } from 'redux/selectors';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/operations';\n\nconst Phonebook = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className={css.phonebook}>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      {error && <p>{error}</p>}\n      <ContactList />\n      {isLoading && <Loader />}\n    </div>\n  );\n};\n\nexport default Phonebook;\n","import Phonebook from 'components/phonebook/Phonebook';\n\nconst Contacts = () => {\n  return <Phonebook />;\n};\n\nexport default Contacts;\n"],"names":["ContactForm","contacts","useSelector","getContacts","dispatch","useDispatch","useForm","defaultValues","name","number","register","handleSubmit","reset","className","css","onSubmit","some","contact","toLowerCase","alert","addContact","type","pattern","title","onChange","evt","setFilter","currentTarget","value","visibleContacts","getVisibleContacts","map","onClick","deleteContact","id","isLoading","getIsLoading","error","getError","useEffect","fetchContacts","Loader"],"sourceRoot":""}